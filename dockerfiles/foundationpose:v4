# FROM pytorch/pytorch:2.3.0-cuda12.1-cudnn8-runtime
FROM ubuntu:20.04

ENV TZ=US/Pacific
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apt-get update --fix-missing && \
    apt-get install -y libgtk2.0-dev && \
    apt-get install -y wget bzip2 ca-certificates curl git vim tmux g++ gcc build-essential cmake checkinstall gfortran libjpeg8-dev libtiff5-dev pkg-config yasm libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev libxine2-dev libv4l-dev qt5-default libgtk2.0-dev libtbb-dev libatlas-base-dev libfaac-dev libmp3lame-dev libtheora-dev libvorbis-dev libxvidcore-dev libopencore-amrnb-dev libopencore-amrwb-dev x264 v4l-utils libprotobuf-dev protobuf-compiler libgoogle-glog-dev libgflags-dev libgphoto2-dev libhdf5-dev doxygen libflann-dev libboost-all-dev proj-data libproj-dev libyaml-cpp-dev cmake-curses-gui libzmq3-dev freeglut3-dev

## cuda
RUN apt update && \
    apt install -y libxml2 gcc wget && \
    wget https://developer.download.nvidia.com/compute/cuda/11.8.0/local_installers/cuda_11.8.0_520.61.05_linux.run && \
    sh cuda_11.8.0_520.61.05_linux.run --silent --toolkit

## 12.5 does not work
# wget https://developer.download.nvidia.com/compute/cuda/12.5.0/local_installers/cuda_12.5.0_555.42.02_linux.run && \
# sh cuda_12.5.0_555.42.02_linux.run --silent --toolkit

# SHELL ["/bin/bash", "--login", "-c"]

## conda and python
# RUN apt install -y wget &&\
#     wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /miniconda.sh && \
#     /bin/bash /miniconda.sh -b -p /opt/conda &&\
#     /opt/conda/condabin/conda init bash
    # ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh
    # echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc
    # /bin/bash -c "source ~/.bashrc" && \
    # /opt/conda/bin/conda update -n base -c defaults conda -y &&\
    # /opt/conda/bin/conda create -n my -y python=3.8

## after installing conda, refresh shell
## /opt/conda/bin/conda is the conda from (base)
## /opt/conda/condabin/conda is the conda from global
# RUN /opt/conda/bin/conda update -n base -c defaults conda -y &&\
#     /opt/conda/bin/conda create -n my -y python=3.8 &&\
#     echo "conda activate my" >> ~/.bashrc

## conda and python
RUN apt update && apt install -y wget &&\
wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /miniconda.sh && \
/bin/bash /miniconda.sh -b -p /opt/conda &&\
/opt/conda/condabin/conda init bash &&\
/opt/conda/bin/conda update -n base -c defaults conda -y &&\
# /opt/conda/bin/conda create -n my -y python=3.8 &&\
/opt/conda/bin/conda create -n my -y python=3.9 &&\
echo "conda activate my" >> ~/.bashrc

# RUN ln -sf /bin/bash /bin/sh
# ENV PATH $PATH:/opt/conda/envs/my/bin

# RUN conda init bash &&\
#     echo "conda activate my" >> ~/.bashrc &&\
#     conda activate my &&\

## after creating and activating the (my) conda environment, refresh shell
## torch
RUN bash -il -c "pip install torch==2.0.0+cu118 torchvision==0.15.1+cu118 torchaudio==2.0.1 --index-url https://download.pytorch.org/whl/cu118"

RUN bash -il -c 'apt install git g++ &&\
    pip install "git+https://github.com/facebookresearch/pytorch3d.git@stable"'

RUN bash -il -c 'pip install scipy joblib scikit-learn ruamel.yaml trimesh \
    pyyaml opencv-python imageio open3d transformations warp-lang einops kornia pyrender'

RUN git clone https://github.com/pybind/pybind11 &&\
    cd pybind11 && git checkout v2.10.0 &&\
    mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=Release -DPYBIND11_INSTALL=ON -DPYBIND11_TEST=OFF &&\
    make -j6 && make install && cd /

RUN wget https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.tar.gz &&\
    tar xvzf ./eigen-3.4.0.tar.gz &&\
    cd eigen-3.4.0 &&\
    mkdir build &&\
    cd build &&\
    cmake .. &&\
    make install && cd /


## kaolin
## https://kaolin.readthedocs.io/en/latest/notes/installation.html
# RUN git clone --recursive https://github.com/NVIDIAGameWorks/kaolin &&\
#     conda activate my && cd /kaolin &&\
#     FORCE_CUDA=1 python setup.py develop && cd /

# RUN bash -il -c "git clone --recursive https://github.com/NVIDIAGameWorks/kaolin &&\
#     cd /kaolin &&\
#     FORCE_CUDA=1 python setup.py develop"

RUN bash -il -c "pip install kaolin==0.15.0 -f https://nvidia-kaolin.s3.us-east-2.amazonaws.com/torch-2.0.0_cu118.html"

# RUN --mount=type=bind,source=..,target=/ bash -il -c "cd /app/mycpp/ && \
#     mkdir -p build && cd build && cmake .. -DPYTHON_EXECUTABLE=$(which python) && make -j11"

## build_all.sh
RUN bash -il -c "git clone https://github.com/NVlabs/FoundationPose.git &&\
    cd /FoundationPose/mycpp/ &&\
    mkdir -p build && cd build && cmake .. -DPYTHON_EXECUTABLE=$(which python) && make -j11 &&\
    cd /FoundationPose/bundlesdf/mycuda &&\
    rm -rf build *egg* && pip install -e ."

RUN bash -il -c "cd FoundationPose &&\
    pip install -r requirements.txt &&\
    bash build_all.sh"

# ENV SHELL=/bin/bash
# RUN ln -sf /bin/bash /bin/sh
